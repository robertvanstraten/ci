grades:
    module_1:
        type: float
        subgrades:
            check50: integer
            late: boolean
            cap: float
        automatic:
            check50: correctness_score * 25
        calculation: late != 0 && [9.0 * check50 / 25.0 + 1, cap].min || 9.0 * check50 / 25.0 + 1
    module_2:
        type: float
        subgrades:
            check50: integer
            openv: integer
            late: boolean
            cap: float
        # automatic:
        #     check50: correctness_score * 25
        calculation: late != 0 && [4.0 * (check50 / 25.0) + 5.0 * (openv / 32.0) + 1, cap].min || [4.0 * (check50 / 25.0) + 5.0 * (openv / 32.0) + 1, 10.0].min
    module_3:
        type: float
        subgrades:
            check50: integer
            openv: integer
            late: boolean
            cap: float
        # automatic:
        #     check50: correctness_score * 10
        calculation: late != 0 && [4.0 * (check50 / 9.0) + 5.0 * (openv / 12.0) + 1, cap].min || [4.0 * (check50 / 9.0) + 5.0 * (openv / 12.0) + 1, 10.0].min

    # verslag2:
    #     type: float
    #     subgrades:
    #         punten: integer
    #     calculation: (punten / 14.0) * 9.0 + 1.0

    tentamen:
        type: pass
        subgrades:
            passed: boolean
        calculation: passed
        is_test: true

    hertentamen:
        type: pass

calculation:
    eindcijfer:
        tentamen: 0
        mods: 1
        # prokject: 1
    herkansingscijfer:
        hertentamen: 0
        mods: 1
        # project: 1

tentamen:
    submits:
        tentamen: 1
    required: true  # betekent dat "gehaald" moet zijn

hertentamen:
    submits:
        hertentamen: 1
    required: true  # betekent dat "gehaald" moet zijn


mods:
    submits:
        module_1: 1
        module_2: 1
        module_3: 1
    minimum: 5.5

# project:
#     submits:
#         verslag2: 1

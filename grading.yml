grades:
    module_1:
        type: float
        subgrades:
            check50: float
            late: boolean
            cap: float
        automatic:
            check50: correctness_score * 9 + 1
        calculation: late != 0 && [check50, cap].min || check50
    module_2:
        type: float
        subgrades:
            check50: float
            points_open: integer
            penalty: float
        automatic:
            check50_score: correctness_score
        calculation: "penalty > 0 && [((points_open + check50_score * 29) / 57.0) * 9 + 1, penalty].min || (((points_open + check50_score * 29) / 57.0) * 9 + 1)"
    module_3:
        type: float
        subgrades:
            points_check50: integer
            points_open: integer
            penalty: float
        automatic:
            points_check50: correctness_score
        calculation: "penalty > 0 && [((points_open + points_check50) / 16.0) * 9 + 1, penalty].min || (((points_open + points_check50) / 16.0) * 9 + 1)"
    celp_prototype:
        type: float
    tentamen:
        type: float
        subgrades:
            points: integer
        calculation: "[(4.5 / 19.0 * points + 10 - 36 * 4.5 / 19).round(1), 1].max"
        hide_calculated: false
    hertentamen:
        type: float
        subgrades:
            points: integer
        calculation: "[(4.5 / 19.0 * points + 10 - 36 * 4.5 / 19).round(1), 1].max"
        hide_calculated: false

calculation:
    resit:
        hertentamen: 30
        project: 40
        assignments: 30
    normal:
        tentamen: 30
        project: 40
        assignments: 30

assignments:
    minimum: 5.5
    submits:
        extracting_information: 10
        collaborative_filtering: 10
        content_based_filtering: 10

tentamen:
    minimum: 5.5
    submits:
        tentamen: 1

hertentamen:
    minimum: 5.5
    submits:
        hertentamen: 1

project:
    submits:
        celp_prototype: 1

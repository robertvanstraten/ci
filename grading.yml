grades:
    module_1:
        type: float
        subgrades:
            points: integer
            penalty: float
        automatic:
            points: correctness_score
        calculation: "(penalty > 0) && [(points / 25.0) * 9 + 1, penalty].min || ((points / 25.0) * 9 + 1)"
    module_2:
        type: float
        subgrades:
            correctness: integer
            design: integer
            penalty: integer
        calculation: "[((7 * (correctness / 88.0 * 5) + 3 * design - 10) / 40.0 * 9 + 1).round(1) - penalty.abs, 1].max"
    module_3:
        type: float
        subgrades:
            correctness: integer
            design: integer
            penalty: integer
        calculation: "[((7 * (correctness / 36.0 * 5) + 3 * design - 10) / 40.0 * 9 + 1).round(1) - penalty.abs, 1].max"
    celp_prototype:
        type: float
    tentamen:
        type: float
        subgrades:
            points: integer
        calculation: "[(4.5 / 19.0 * points + 10 - 36 * 4.5 / 19).round(1), 1].max"
        hide_calculated: false
    hertentamen:
        type: float
        subgrades:
            points: integer
        calculation: "[(4.5 / 19.0 * points + 10 - 36 * 4.5 / 19).round(1), 1].max"
        hide_calculated: false

calculation:
    resit:
        hertentamen: 30
        project: 40
        assignments: 30
    normal:
        tentamen: 30
        project: 40
        assignments: 30

assignments:
    minimum: 5.5
    submits:
        extracting_information: 10
        collaborative_filtering: 10
        content_based_filtering: 10

tentamen:
    minimum: 5.5
    submits:
        tentamen: 1

hertentamen:
    minimum: 5.5
    submits:
        hertentamen: 1

project:
    submits:
        celp_prototype: 1
